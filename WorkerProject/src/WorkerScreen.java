
import java.util.ArrayList;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */

/**
 *
 * @author erhan
 */
public class WorkerScreen extends javax.swing.JDialog {
    DefaultTableModel model;
    WorkerOperations operations = new WorkerOperations();
    
    /**
     * Creates new form WorkerScreen
     */
    public WorkerScreen(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        model = (DefaultTableModel)workerTable.getModel();
        showWorker();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workerTable = new javax.swing.JTable();
        seachBar = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        department = new javax.swing.JTextField();
        salary = new javax.swing.JTextField();
        surname = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        messageWriting = new javax.swing.JLabel();
        addWorker = new javax.swing.JButton();
        updateWorker = new javax.swing.JButton();
        deleteWorker = new javax.swing.JButton();
        quit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        workerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Surname", "Departman", "Salary"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        workerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                workerTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(workerTable);
        if (workerTable.getColumnModel().getColumnCount() > 0) {
            workerTable.getColumnModel().getColumn(0).setResizable(false);
            workerTable.getColumnModel().getColumn(1).setResizable(false);
            workerTable.getColumnModel().getColumn(2).setResizable(false);
            workerTable.getColumnModel().getColumn(3).setResizable(false);
            workerTable.getColumnModel().getColumn(4).setResizable(false);
        }

        seachBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seachBarActionPerformed(evt);
            }
        });
        seachBar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                seachBarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                seachBarKeyReleased(evt);
            }
        });

        jLabel1.setText("Name : ");

        jLabel2.setText("Surname : ");

        jLabel3.setText("Department : ");

        jLabel4.setText("Salary : ");

        department.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentActionPerformed(evt);
            }
        });

        messageWriting.setForeground(new java.awt.Color(255, 0, 0));

        addWorker.setText("Add new worker");
        addWorker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addWorkerActionPerformed(evt);
            }
        });

        updateWorker.setText("Update worker");
        updateWorker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateWorkerActionPerformed(evt);
            }
        });

        deleteWorker.setText("Delete worker");
        deleteWorker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteWorkerActionPerformed(evt);
            }
        });

        quit.setText("Quit");
        quit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(seachBar, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(name, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                                            .addComponent(surname)
                                            .addComponent(department)
                                            .addComponent(salary))
                                        .addGap(45, 45, 45)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(addWorker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(updateWorker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(deleteWorker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(quit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(messageWriting, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 119, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(seachBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addWorker, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(surname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(updateWorker)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(department, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteWorker))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(salary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(messageWriting)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void seachBarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_seachBarKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_seachBarKeyPressed
    public void dinamicSearch(String search){
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        
        
        workerTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
        
    }
    private void seachBarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_seachBarKeyReleased
        String search = seachBar.getText();
        
        dinamicSearch(search);
    }//GEN-LAST:event_seachBarKeyReleased

    private void departmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_departmentActionPerformed

    private void addWorkerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addWorkerActionPerformed
       if(name.getText().trim().isEmpty() || surname.getText().trim().isEmpty() || department.getText().trim().isEmpty() || salary.getText().trim().isEmpty()){
           messageWriting.setText("Informations is empty , please fill the informations!!!");
       }
       else{
            messageWriting.setText("");
            String name = this.name.getText();
            String surname = this.surname.getText();
            String department = this.department.getText();
            String salary = this.salary.getText();

            operations.addWorker(name,surname,department,salary);
            showWorker();
            messageWriting.setText("New worker added with successfully...");
            this.name.setText("");
            this.surname.setText("");
            this.department.setText("");
            this.salary.setText("");
       }
        
    }//GEN-LAST:event_addWorkerActionPerformed

    private void workerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_workerTableMouseClicked
        
        int selectedrow = workerTable.getSelectedRow();
        name.setText(model.getValueAt(selectedrow, 1).toString());
        surname.setText(model.getValueAt(selectedrow, 2).toString());
        department.setText(model.getValueAt(selectedrow, 3).toString());
        salary.setText(model.getValueAt(selectedrow, 4).toString());
    }//GEN-LAST:event_workerTableMouseClicked

    private void quitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_quitActionPerformed

    private void updateWorkerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateWorkerActionPerformed
        String name = this.name.getText();
        String surname = this.surname.getText();
        String department = this.department.getText();
        String salary = this.salary.getText();

        int selectedrow = workerTable.getSelectedRow();
        if (name.isEmpty() || surname.isEmpty() || department.isEmpty() || salary.isEmpty()) {
            messageWriting.setText("Please fill in all fields.");
            return;
        }

        if (selectedrow == -1) {
            if (model.getRowCount() == 0) {
                messageWriting.setText("Worker table is currently empty.");
            } else {
                messageWriting.setText("Please choose a worker to update.");
            }
        } else {
            try {
                int id = (int)workerTable.getValueAt(selectedrow, 0);
                operations.updateWorker(id, name, surname, department, salary);
                
                
                showWorker();
                messageWriting.setText("Worker updated successfully.");
            } catch (Exception e) {
                messageWriting.setText("An error occurred while updating the worker.");
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_updateWorkerActionPerformed

    private void deleteWorkerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteWorkerActionPerformed
        messageWriting.setText("");

        int selectedrow = workerTable.getSelectedRow();

        if (selectedrow == -1) {
            if (model.getRowCount() == 0) {
                messageWriting.setText("Worker table is currently empty.");
            } else {
                messageWriting.setText("Please choose a worker to delete.");
            }
        }
        else {
            try {
                int id = (int)model.getValueAt(selectedrow, 0);
                operations.deleteWorker(id);
                
    
                showWorker();
                messageWriting.setText("Worker deleted successfully.");
            } catch (Exception e) {
                messageWriting.setText("An error occurred while deleting the worker.");
                e.printStackTrace();
            }
        }
        
        
        
    }//GEN-LAST:event_deleteWorkerActionPerformed

    private void seachBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seachBarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seachBarActionPerformed

    /**
     * @param args the command line arguments
     */
    public void showWorker(){
        model.setRowCount(0);
        ArrayList<Worker> workers = new ArrayList<Worker>();
         workers = operations.bringWorkers();
         
         if(workers != null){
             for(Worker worker : workers){
                 Object[] adding = {worker.getId(),worker.getName(),worker.getSurname(),worker.getDepartment(),worker.getSalary()};
                 
                 model.addRow(adding);
             }
         }
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WorkerScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WorkerScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WorkerScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WorkerScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                WorkerScreen dialog = new WorkerScreen(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addWorker;
    private javax.swing.JButton deleteWorker;
    private javax.swing.JTextField department;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel messageWriting;
    private javax.swing.JTextField name;
    private javax.swing.JButton quit;
    private javax.swing.JTextField salary;
    private javax.swing.JTextField seachBar;
    private javax.swing.JTextField surname;
    private javax.swing.JButton updateWorker;
    private javax.swing.JTable workerTable;
    // End of variables declaration//GEN-END:variables
}
